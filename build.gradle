buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'org.spongepowered.plugin' version '0.8.1'
    id 'net.minecrell.vanillagradle.server' version '2.2-4'
    id 'maven'
}

// Environment variables for the build set by the build server
ext.buildNumber = System.env.BUILD_NUMBER ?: '0'

defaultTasks 'clean', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()

minecraft {
    version = project.minecraftVersion
    mappings = project.mcpMappings
}

version = "$minecraft.version-$version.$buildNumber"

repositories {
    maven {
        name = 'nucleus'
        url = 'http://repo.drnaylor.co.uk/artifactory/list/minecraft'
    }
    maven {
        name = 'mcclans'
        url = 'http://direstone.com/artifactory/libs-release-local'
    }
}

sourceSets {
    api
}

dependencies {
    apiCompile "org.spongepowered:spongeapi:$apiVersion"

    compile sourceSets.api.output
    compileOnly ("org.spongepowered:spongecommon:$apiVersion:dev") {
        exclude module: 'testplugins'
	}

    compileOnly "com.googlecode.json-simple:json-simple:1.1"
    compileOnly "io.github.nucleuspowered:nucleus-api:0.29.0-S6.0"
    compileOnly "nl.riebie:mcclans-api:1.3"
}

jar {
    from sourceSets.api.output
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.api.output
}

sourceJar {
    from sourceSets.api.allSource
}

javadoc {
    source = sourceSets.api.java
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives apiJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            // This is set by the build server when deploying to the repo
            if (project.hasProperty('spongeRepo')) {
                repository(url: project.spongeRepo) {
                    if (project.hasProperty('spongeUsername') && project.hasProperty('spongePassword')) {
                        authentication(userName: project.spongeUsername, password: project.spongePassword)
                    }
                }
            }

            pom {
                artifactId = project.archivesBaseName

                project {
                    name = project.archivesBaseName
                    description = project.description
                    packaging = 'jar'
                    url = project.url

                    scm {
                        url = "https://github.com/$project.organization/$project.name"
                        connection = "scm:git:https://github.com/$project.organization/${project.name}.git"
                        developerConnection = "scm:git:git@github.com:$project.organization/${project.name}.git"
                    }

                    issueManagement {
                        system = 'GitHub Issues'
                        url = "https://github.com/$project.organization/$project.name/issues"
                    }

                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'http://opensource.org/licenses/MIT'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }
    }
}

// Configure changelog task only if we're on Forge's Jenkins server
if (project.hasProperty('forgeJenkinsPass')) {
    task changelog(type: JenkinsChangelog) {
        outputs.upToDateWhen { false } // Refresh changelog for every build

        serverRoot = 'http://ci.jenkins.minecraftforge.net/'
        jobName = 'griefprevention'
        targetBuild = project.buildNumber
        authName = 'console_script'
        authPassword = project.forgeJenkinsPass
        output = "build/distributions/${project.name}-${project.version}-changelog.txt"
    }

    artifacts {
        archives changelog.output
    }

    uploadArchives.dependsOn 'changelog'
}

